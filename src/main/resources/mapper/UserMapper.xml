<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hz.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hz.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="pic_id" property="picId" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="describle" property="describle" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="creater_id" property="createrId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, `name`, token, password, department, pic_id, mobile, email, sex, birthday,
    describle, pid, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,username,name,department,pic_id,mobile,email,sex,birthday,describle,pid,status
    from s_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from s_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hz.domain.User" >
    insert into s_user (id, username, name, 
      token, password, department, 
      pic_id, mobile, email, 
      sex, birthday, describle, 
      pid, status, creater_id, 
      create_time, updater_id, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{token,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{picId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, #{describle,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{createrId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hz.domain.User" >
    insert into s_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="picId != null" >
        pic_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="describle != null" >
        describle,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createrId != null" >
        creater_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="picId != null" >
        #{picId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="describle != null" >
        #{describle,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null" >
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.domain.User" >
    update s_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="picId != null" >
        pic_id = #{picId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="describle != null" >
        describle = #{describle,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.domain.User" >
    update s_user
    set username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      pic_id = #{picId,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      describle = #{describle,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      updater_id = #{updaterId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from s_user
    where username = #{username,jdbcType=VARCHAR} and status = 1
  </select>

  <select id="selectByUserName1" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    id,username,name
    from s_user
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="selectUserList" resultMap="BaseResultMap" parameterType="com.hz.domain.User">
    <if test="username!=null"><bind name="pattern" value="'%'+username+'%'"></bind></if>
    select <include refid="Base_Column_List" />
    from s_user
    <where>
      <if test="username!=null">username like #{pattern}</if>
      <if test="status!=null">and status = #{status,jdbcType=INTEGER}</if>
      <if test="pid!=null">and pid = #{pid,jdbcType=INTEGER}</if>
      <if test="pids !=null"> and pid in
        <foreach collection="pids" item="pid" index="index" open="(" close=")" separator=",">
          #{pid}
        </foreach>
      </if>
    </where> order by id desc
  </select>

  <select id="getUserNameByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select b.id ,b.username from s_user_role a join s_user b on a.user_id  = b.id where b.status =1 and a.role_id = #{arg0}
  </select>

  <select id="selectAllSaler" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select id from s_user where pid = #{arg0}
  </select>


  <select id="countUserList" resultType="java.lang.Integer" parameterType="com.hz.domain.User">
    <if test="username!=null"><bind name="pattern" value="'%'+username+'%'"></bind></if>
    select count(distinct id) from s_user a
    <where>
      <if test="username!=null">username like #{pattern}</if>
      <if test="status!=null">and a.status = #{status,jdbcType=INTEGER}</if>
    </where>
  </select>

  <select id="selectUserInfoByToken" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from s_user
    where token = #{token,jdbcType=VARCHAR} and status = 1
  </select>
</mapper>